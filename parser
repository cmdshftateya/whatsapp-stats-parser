#! /usr/bin/env python3
from argparse import ArgumentParser
from pathlib import Path
import re

def main():
    parser = ArgumentParser()
    parser.add_argument('--chat', required=True, type=str, help='File path to exported WhatsApp chat as .txt file.')
    # TODO: make the timestamp format less strict
    parser.add_argument("--start_date", required=True, type=str, help="Start date to being parsing stats (format: m/dd/yy).")
    args = parser.parse_args()

    # iterate through lines of the file until we find the target start date
    # once we've found the start date, then we begin counting statistics
    found_start = False
    unique_senders = set()
    msgs_per_sender = {}
    num_msgs = 0

    chat_file = open(Path(args.chat))
    for line in chat_file:
        # lines that begin a new message should begin with a timestamp in this format
        # full regular expression: ^([\d]*)[\/]([\d]*)[\/]([\d]*), [\d]*:[\d]* (AM|PM)
        # we only need the date portion to match the target date
        timestamp = re.search("^([\d]*)[\/]([\d]*)[\/]([\d]*)", line)
        if not timestamp:
            continue
    
        # check if the line has our target date if we haven't found it yet
        if timestamp.group(0) == args.start_date:
            found_start = True;
        
        if not found_start:
            continue
        
        # at this point, we'll begin parsing the messages for stats

        # to get the sender, remove the date from the beginning of the line
        # then, match any character up to the colon
        parseline = re.sub("^([\d]*)[\/]([\d]*)[\/]([\d]*), [\d]*:[\d]* (AM|PM) - ", "", line)
        sender_s = re.search("^([^:])+:", parseline)

        # messages such as people joining the chat don't have senders
        # we don't want to count them either, so increment num_msgs later
        if not sender_s:
            continue
        
        sender = sender_s.group(0)
        unique_senders.add(sender)
        
        # track messages per sender
        if sender not in msgs_per_sender.keys():
            msgs_per_sender[sender] = 1
        else:
            msgs_per_sender[sender] += 1
    
        num_msgs += 1
    
    # sort messages per sender
    sorted_msgs_by_sender = sorted(msgs_per_sender.items(), key=lambda x:x[1], reverse=True)

    print("RESULTS:\n")
    print("Unique senders: " + str(len(unique_senders)))
    print("Number of messages: " + str(num_msgs) + "\n")
    print("MESSAGES PER SENDER:\n")
    for item in sorted_msgs_by_sender:
        print(item[0] + " " + str(item[1]))


if __name__ == '__main__':
    main()